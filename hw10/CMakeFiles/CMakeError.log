Determining if the pthread_create exist failed with the following output:
Change Dir: /home/student/Documents/CPSC223/hw10/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_54252/fast"
/usr/bin/make -f CMakeFiles/cmTC_54252.dir/build.make CMakeFiles/cmTC_54252.dir/build
make[1]: Entering directory '/home/student/Documents/CPSC223/hw10/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_54252.dir/CheckSymbolExists.c.o
/usr/bin/cc    -o CMakeFiles/cmTC_54252.dir/CheckSymbolExists.c.o   -c /home/student/Documents/CPSC223/hw10/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_54252
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_54252.dir/link.txt --verbose=1
/usr/bin/cc      -rdynamic CMakeFiles/cmTC_54252.dir/CheckSymbolExists.c.o  -o cmTC_54252 
/usr/bin/ld: CMakeFiles/cmTC_54252.dir/CheckSymbolExists.c.o: in function `main':
CheckSymbolExists.c:(.text+0x1b): undefined reference to `pthread_create'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_54252.dir/build.make:87: cmTC_54252] Error 1
make[1]: Leaving directory '/home/student/Documents/CPSC223/hw10/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_54252/fast] Error 2

File /home/student/Documents/CPSC223/hw10/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <pthread.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef pthread_create
  return ((int*)(&pthread_create))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the function pthread_create exists in the pthreads failed with the following output:
Change Dir: /home/student/Documents/CPSC223/hw10/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_e4dfb/fast"
/usr/bin/make -f CMakeFiles/cmTC_e4dfb.dir/build.make CMakeFiles/cmTC_e4dfb.dir/build
make[1]: Entering directory '/home/student/Documents/CPSC223/hw10/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e4dfb.dir/CheckFunctionExists.c.o
/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=pthread_create   -o CMakeFiles/cmTC_e4dfb.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.13/Modules/CheckFunctionExists.c
Linking C executable cmTC_e4dfb
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e4dfb.dir/link.txt --verbose=1
/usr/bin/cc  -DCHECK_FUNCTION_EXISTS=pthread_create    -rdynamic CMakeFiles/cmTC_e4dfb.dir/CheckFunctionExists.c.o  -o cmTC_e4dfb -lpthreads 
/usr/bin/ld: cannot find -lpthreads
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_e4dfb.dir/build.make:87: cmTC_e4dfb] Error 1
make[1]: Leaving directory '/home/student/Documents/CPSC223/hw10/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_e4dfb/fast] Error 2


Performing C SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD failed with the following output:
Change Dir: /home/student/Documents/CPSC223/hw10/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e7637/fast && /usr/bin/make -f CMakeFiles/cmTC_e7637.dir/build.make CMakeFiles/cmTC_e7637.dir/build
make[1]: Entering directory '/home/student/Documents/CPSC223/hw10/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e7637.dir/src.c.o
/usr/bin/cc   -DCMAKE_HAVE_LIBC_PTHREAD   -o CMakeFiles/cmTC_e7637.dir/src.c.o   -c /home/student/Documents/CPSC223/hw10/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_e7637
/snap/clion/92/bin/cmake/linux/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e7637.dir/link.txt --verbose=1
/usr/bin/cc  -DCMAKE_HAVE_LIBC_PTHREAD    -rdynamic CMakeFiles/cmTC_e7637.dir/src.c.o  -o cmTC_e7637 
/usr/bin/ld: CMakeFiles/cmTC_e7637.dir/src.c.o: in function `main':
src.c:(.text+0x3e): undefined reference to `pthread_create'
/usr/bin/ld: src.c:(.text+0x4a): undefined reference to `pthread_detach'
/usr/bin/ld: src.c:(.text+0x5b): undefined reference to `pthread_join'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_e7637.dir/build.make:87: cmTC_e7637] Error 1
make[1]: Leaving directory '/home/student/Documents/CPSC223/hw10/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_e7637/fast] Error 2


Source file was:
#include <pthread.h>

void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

